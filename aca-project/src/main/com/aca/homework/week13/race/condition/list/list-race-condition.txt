Create a List generic interface that has add(E item) and int size() methods.

Create 2 List generic implementations: UnsafeList and SafeList

Create a NumberAdderRunnable Runnable implementation class that adds a single integer in the List.

The NumberAdderRunnable takes List and Integer in a constructor.

Create RaceConditionGenerator class that creates 10_000 threads with NumberAdderRunnable instances and strats them in start() method. The list instance type should be asked from a user. The Supplier<Boolean> should be used to get the list instance type (safe list/unsafe list)

The start method of RaceConditionGenerator should return the size of the shared list.

Wait until all threads get finished and print the list size. 

Create NumberAdderRunnableTest class and write a unit test (test that run method adds a provided integer into the list)

Create UnsafeListTest and SafeListTest classes and wite unit tests for add() and size() methods

Create RaceConditionGeneratorTest class and unit test for the start method.
